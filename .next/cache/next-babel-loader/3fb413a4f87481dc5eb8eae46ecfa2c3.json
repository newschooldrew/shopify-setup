{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Card, Form, FormLayout, Layout, Page, Stack, TextField } from '@shopify/polaris';\nexport default class AnnotatedLayout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '10%'\n    });\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      this.setState({\n        discount: this.state.discount\n      });\n      console.log('submission', this.state);\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n  }\n\n  render() {\n    const {\n      discount\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.AnnotatedSection, {\n      //generally used on settings pages\n      // to set up/enable functions of app\n      title: \"Default discount\",\n      description: \"Add a product to Sample App, it will automatically be discounted.\"\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: discount,\n      onChange: this.handleChange('discount'),\n      label: \"Discount percentage\",\n      type: \"discount\"\n    }), __jsx(Stack, {\n      distribution: \"trailing\"\n    }, __jsx(Button, {\n      primary: true,\n      submit: true\n    }, \"Save\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/shopify-apps/shopify-sample/pages/annotated-layout.js"],"names":["React","Component","Button","Card","Form","FormLayout","Layout","Page","Stack","TextField","AnnotatedLayout","discount","setState","state","console","log","field","value","render","handleSubmit","handleChange"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,SARJ,QASS,kBATT;AAWA,eAAe,MAAMC,eAAN,SAA8BT,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAC3C;AACJU,MAAAA,QAAQ,EAAE;AADN,KAD2C;;AAAA,0CAuCpC,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZD,QAAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWF;AADT,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKF,KAA/B;AACD,KA5CgD;;AAAA,0CA8CjCG,KAAD,IAAW;AACxB,aAAQC,KAAD,IAAW,KAAKL,QAAL,CAAc;AAAE,SAACI,KAAD,GAASC;AAAX,OAAd,CAAlB;AACD,KAhDgD;AAAA;;AAKnDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA;AAAD,QAAa,KAAKE,KAAxB;AACA,WACI,MAAC,IAAD,QACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,gBAAR;AACI;AACA;AACF,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,WAAW,EAAC;AAJd,OAME,MAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OACA,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKM;AAArB,OACM,MAAC,UAAD,QACI,MAAC,SAAD;AACI,MAAA,KAAK,EAAER,QADX;AAEI,MAAA,QAAQ,EAAE,KAAKS,YAAL,CAAkB,UAAlB,CAFd;AAGI,MAAA,KAAK,EAAC,qBAHV;AAII,MAAA,IAAI,EAAC;AAJT,MADJ,EAOI,MAAC,KAAD;AAAO,MAAA,YAAY,EAAC;AAApB,OACI,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,MAAM;AAAtB,cADJ,CAPJ,CADN,CADA,CANF,CADF,CADF,CADJ;AA8BH;;AArCkD","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Button,\n    Card,\n    Form,\n    FormLayout,\n    Layout,\n    Page,\n    Stack,\n    TextField,\n  } from '@shopify/polaris';\n\nexport default class AnnotatedLayout extends Component {\n    state = {\n        discount: '10%',\n      };\n\n    render() {\n        const {discount} = this.state;\n        return (\n            <Page>\n              <Layout>\n                <Layout.AnnotatedSection\n                    //generally used on settings pages\n                    // to set up/enable functions of app\n                  title=\"Default discount\"\n                  description=\"Add a product to Sample App, it will automatically be discounted.\"\n                >\n                  <Card sectioned>\n                  <Form onSubmit={this.handleSubmit}>\n                        <FormLayout>\n                            <TextField\n                                value={discount}\n                                onChange={this.handleChange('discount')}\n                                label=\"Discount percentage\"\n                                type=\"discount\"\n                            />\n                            <Stack distribution=\"trailing\">\n                                <Button primary submit>\n                                Save\n                                </Button>\n                            </Stack>\n                        </FormLayout>\n                    </Form>\n                  </Card>\n                </Layout.AnnotatedSection>\n              </Layout>\n            </Page>\n          );\n    }\n\n    handleSubmit = () => {\n        this.setState({\n          discount: this.state.discount,\n        });\n        console.log('submission', this.state);\n      };\n    \n      handleChange = (field) => {\n        return (value) => this.setState({ [field]: value });\n      };\n    }\n"]},"metadata":{},"sourceType":"module"}